# ==========================================================================
#                                                                           |
#   ZSH Config - after running ~/.zshenv for setting the base environment   |
#                                                                           |
# ==========================================================================


# Prompt powerlevel10k {{{

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#powerlevel custom settings
POWERLEVEL9K_MODE='awesome-fontconfig'
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(background_jobs context dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status time command_execution_time)
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_TIME_FORMAT="%D{%H:%M:%S}"
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND="yellow"
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND="black"

# }}}

# Configurations for Tools and Environment {{{

# path and fpath adaptions
fpath=($HOME/dotfiles/zsh/functions $fpath)


export FPP_DISABLE_SPLIT=1

# export GITLAB_HOST="https://gitlab.plob.cz/"

export PASSWORD_STORE_X_SELECTION="primary"

# if [ -f "$HOME/.local/bin/ptipython" ]; then
#     export PYSPARK_DRIVER_PYTHON="$HOME/.local/bin/ptipython"
# fi

# export ZSH="$HOME/.oh-my-zsh"

export FORGIT_COPY_CMD='xclip -selection clipboard'

# }}}

# Global aliases {{{

# pipe to less
alias -g L='| less'
# pipe to less with line numbers
alias -g LN='| less -N'
# Grep output
alias -g G='| grep'
# RipGrep output
alias -g R='| rg'
# send output to bat as json
alias -g J='| bat -p -l json'
# send output to bat
alias -g B='| bat'
# send output to bat with choosing language
alias -g BL='| bat -l'
# pipe output to xclip but keep stdout there
alias -g X='| tee /dev/tty | xclip -i'
# show helpmessage in manpager
alias -g H='--help | nvim +Man!' # nice help viewer
# pipe STDOUT + STDERR into xclip
alias -g XA='2>&1 | tee /dev/tty | xclip -i'

# }}}

# ZSH Settings {{{

# Automatically cd into folder - needed for .. and ... etc aliases to work globally
setopt AUTO_CD

#append into history file
setopt INC_APPEND_HISTORY
#save only one command if 2 common are same and consistent
setopt HIST_IGNORE_DUPS
#add timestamp for each entry
setopt EXTENDED_HISTORY

setopt share_history

setopt AUTO_PUSHD           # Push the current directory visited on the stack.
setopt PUSHD_IGNORE_DUPS    # Do not store duplicates in the stack.
setopt PUSHD_SILENT         # Do not print the directory stack after pushd or popd.

# create nice aliases for jumping in the last folders
# taken from https://thevaluable.dev/zsh-install-configure-mouseless/
alias d='dirs -v'
for index ({1..9}) alias "$index"="cd +${index}"; unset index

bindkey -v
export KEYTIMEOUT=1

source $DOTFILES/zsh/functions/cursor_mode.zsh
source $DOTFILES/zsh/completion.zsh

zmodload zsh/complist
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history


# emacs keybindings in insert mode
bindkey '^A' beginning-of-line
bindkey '^E' end-of-line

# use v for loading to vim instead visual mode
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# vim commands like da" or ci(
autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed
for km in viopp visual; do
  bindkey -M $km -- '-' vi-up-line-or-history
  for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
    bindkey -M $km $c select-quoted
  done
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $km $c select-bracketed
  done
done


# mimic vim surroung in shell
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd ys add-surround
bindkey -M visual S add-surround

# incremental search with up and down as in omz
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward
# the below version only uses first command, but ignores later
# bindkey '^[[A' up-line-or-search
# bindkey '^[[B' down-line-or-search

source $DOTFILES/zsh/functions/fg_bg.sh
zle -N fg-bg
bindkey '^Z' fg-bg
# }}}

# OH MY ZSH Settings {{{
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"
# Plugins=(git z)
#include fonts
# source ~/.fonts/*.sh

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(poetry git git-flow git-flow-avh git-hubflow git-prompt  gitfast github vi-mode)
# git-remote-branch
#
VI_MODE_SET_CURSOR=true

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# }}}


# --------------------------------------------------------------------------------------
#  Sourcing of oh my zsh has to be after configuration, otherwise it does not load      |
#  the right way!                                                                       |
#                                                                                       |
#  sourcing of aliases has to be done after oh-my-zsh otherwise it might be overwritten |
#  and not the desired outcome!                                                         |
# --------------------------------------------------------------------------------------


# eval "$(jenv init -)"

# ZINIT {{{

declare -A ZINIT
ZINIT[HOME_DIR]="$ZDOTDIR"/.zinit
ZINIT[BIN_DIR]="$ZDOTDIR"/.zinit/bin
ZINIT[PLUGINS_DIR]="$ZDOTDIR"/.zinit/plugins
ZINIT[COMPLETIONS_DIR]="$ZDOTDIR"/.zinit/completions
ZINIT[SNIPPETS_DIR]="$ZDOTDIR"/.zinit/snippets
ZINIT[ZCOMPDUMP_PATH]="$XDG_CACHE_HOME"/zcompdump/zcompdump-zinit

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[[ ! -f  "${ZINIT_HOME}/zinit.zsh" ]] || source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit


# ----------------- PLugins ---------------------------
zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 pick"zsh-interactive-cd.plugin.zsh" \
    changyuheng/zsh-interactive-cd \
 pick"z.sh" \
    rupa/z \
 pick"fz.plugin.zsh" \
    changyuheng/fz \

zinit ice depth=1; zinit light romkatv/powerlevel10k

# zinit light andydecleyre/zpy

# # do not like this, also it has a bug, but it actually is nice (except the bug)
# zinit ice wait"0b" lucid atload'bindkey "$terminfo[kcuu1]" history-substring-search-up; bindkey "$terminfo[kcud1]" history-substring-search-down'
# zinit light zsh-users/zsh-history-substring-search
# bindkey -M vicmd "$key[Up]" history-substring-search-up
# bindkey -M vicmd "$key[Down]" history-substring-search-down
# }}}


# Source of other files {{{
# source $ZSH/oh-my-zsh.sh
source $HOME/dotfiles/zsh/completion/*

source $HOME/dotfiles/shell/alias.sh
source $HOME/dotfiles/shell/functions.sh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


# load p10k
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

source ~/dotfiles/cli_modules/forgit/forgit.plugin.zsh

. "$HOME/.asdf/asdf.sh"

# }}}


# asdf
# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)

# Autoload and run for completions
# autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/bin/terraform terraform
autoload -Uz compinit && compinit

# autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc

source virtualenvwrapper.sh


. "$CARGO_HOME"
