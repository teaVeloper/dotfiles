 # Free the original `Ctrl-b` prefix keybinding.
unbind C-b

#Setting the prefix from `C-b` to `C-a`.
# By remapping the `CapsLock` key to `Ctrl`,
# you can make triggering commands more comfottable!
set-option -g prefix C-a
# Ensure that we can send `Ctrl-a` to other apps.
bind a send-prefix
# set the delay between prefix and command
set -s escape-time 1


# automatically renumber windows
set-option -g renumber-windows on

# stop tmux renaming windows
set -g allow-rename off

# set default shell for tmux to zsh
set -g default-shell /usr/bin/zsh

# 0 is too far from every other index
set -g base-index 1
set -g pane-base-index 1

# Reload config on Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded Config"

# Turn off mouse - makes only problems
#set -g mouse off





# default Terminal 256 color mode
set-option -g default-terminal "xterm-256color"
# tell Tmux that outside terminal supports true color
#set -ga terminal-overrides ",*-256color*:Tc"

# enable vi keys
setw -g mode-keys vi

# copy mode like vi bindings and use xclip
# bind Escape copy-mode
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
unbind p
bind p paste-buffer

#bind -t vi-copy y copy-pipe "xclip -sel clip -i"
#bind C-p run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# C-p will paste system clipbard, p will paste tmux clipboard (faster)
# this way both utilities are working


# open new split in the same directory
#bind-key | split-window -h "#{pane_current_path}"
#bind-key - split-window -v "#{pane_current_path}"


# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# Moving between panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# escape time
#set-option -sg escape-time 10

# integrate tmux and system clipboard
#bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"


#bind-key -T copy-mode-vi 'C-h' select-pane -L
#bind-key -T copy-mode-vi 'C-j' select-pane -D
#bind-key -T copy-mode-vi 'C-k' select-pane -U
#bind-key -T copy-mode-vi 'C-l' select-pane -R
#bind-key -T copy-mode-vi 'C-\' select-pane -l

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(/home/bertold/dotfiles/submodule_tools/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(/home/bertold/dotfiles/submodule_tools/tmux-powerline/powerline.sh right)"
set-hook -g session-created 'run-shell "/home/bertold/dotfiles/submodule_tools/tmux-powerline/powerline.sh init"' # prettifies the window-status segments
#set -ga terminal-overrides ",xterm-256color:Tc"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
